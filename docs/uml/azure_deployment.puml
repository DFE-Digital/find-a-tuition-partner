@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome
!define FONTAWESOME_5 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define AzurePuml https://raw.githubusercontent.com/plantuml-stdlib/Azure-PlantUML/release/2-2/dist

!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureC4Integration.puml

!includeurl AzurePuml/Web/AzureWebApp.puml
!includeurl AzurePuml/Databases/AzureRedisCache.puml

!include DEVICONS/dotnet.puml
!include DEVICONS/postgresql.puml
!include DEVICONS/google_analytics.puml
!include DEVICONS/redis.puml
!include FONTAWESOME/file_text.puml
!include FONTAWESOME_5/users.puml
!include FONTAWESOME_5/map_marked.puml
!include FONTAWESOME_5/file_excel.puml
!include FONTAWESOME_5/database.puml
!include FONTAWESOME_5/google_drive.puml
!include FONTAWESOME_5/envelope.puml
!include AzurePuml/Networking/AzureFrontDoorService.puml
!include AzurePuml/Web/AzureWebApp.puml
!include AzurePuml/Databases/AzureDatabaseForPostgreSQL.puml
!include AzurePuml/Databases/AzureRedisCache.puml
!include AzurePuml/Management/AzureResourceGroups.puml
!include AzurePuml/Compute/AzureFunction.puml
!include AzurePuml/Storage/AzureBlobStorage.puml

LAYOUT_LANDSCAPE()

Person(users, "External Users", "School staff/Tuition Partners", $sprite="users")

Boundary(azureCIP, "Production", "Azure Subscription") {
    Boundary(vnetDmz, "DMZ", "VNET") {
        AzureFrontDoorService(frontDoor, "CDN & WAF", "Azure Front Door")
    }
    Boundary(vnetPrivate, "Private", "VNET") {
        AzureWebApp(app, "FATP Application", ".NET Core")
        AzureDatabaseForPostgreSQL(db, "FATP Database", "Azure Database for PostgreSQL")
        AzureRedisCache(cache, "Session Cache", "Azure Redis Cache")
        AzureFunction(emailTrigger, "Email Trigger", ".NET Core")
    }
    Boundary(sharedRG, "Shared", "Azure Resource Group") {
        AzureBlobStorage(tpData, "Tuition Partner Data", "Excel")
    }
}

Person(deliveryTeam, "Delivery Team", "Developers, testers, etc.", $sprite="users")

Boundary(azureCIPDev, "Development", "Azure Subscription") {
    Boundary(vnetDmzDev, "DMZ", "VNET") {
        AzureFrontDoorService(frontDoorDev, "CDN & WAF", "Azure Front Door")
    }
    Boundary(vnetPrivatePR123, "Private", "VNET") {
        AzureWebApp(appPR123, "FATP Application", ".NET Core")
        AzureDatabaseForPostgreSQL(dbPR123, "FATP Database", "Azure Database for PostgreSQL")
        AzureRedisCache(cachePR123, "Session Cache", "Azure Redis Cache")
        AzureFunction(emailTriggerPR123, "Email Trigger", ".NET Core")
    }
    Boundary(vnetPrivatePR456, "Private", "VNET") {
        AzureWebApp(appPR456, "FATP Application", ".NET Core")
        AzureDatabaseForPostgreSQL(dbPR456, "FATP Database", "Azure Database for PostgreSQL")
        AzureRedisCache(cachePR456, "Session Cache", "Azure Redis Cache")
        AzureFunction(emailTriggerPR456, "Email Trigger", ".NET Core")
    }
}

' System_Ext(logitIo, "logit.io", "ELK stack and Grafana as a service", $sprite="file_text")
' System_Ext(googleAnalytics, "Google Analytics", "Opt in metrics collection", $sprite="google_analytics")
' System_Ext(postcodesIo, "postcodes.io", "Maps postcode to Local Authority District code", $sprite="map_marked")
' System_Ext(bigQuery, "Google BigQuery", "Stores web request data for analytics", $sprite="database")
' System_Ext(notify, "GOV.UK Notify", "Send OTPs and other notifications to the user", $sprite="envelope")

Rel(users, frontDoor, "Uses", "HTTPS")
Rel(frontDoor, app, "Uses", "HTTPS")
Rel(app, db, "Uses", "PLSQL/TLS")
Rel(app, cache, "Uses", "RESP/TLS")
Rel(emailTrigger, app, "Trigger", "HTTPS")
' Rel(app, logitIo, "Send log events", "TCPSink/TLS")
' Rel(app, googleAnalytics, "Send analytics events", "HTTPS")
' Rel(app, postcodesIo, "Query postcode data", "HTTPS")
' Rel(app, bigQuery, "Send analytics events", "HTTPS")
' Rel(app, notify, "Trigger notifications", "HTTPS")

Rel(deliveryTeam, frontDoorDev, "Uses", "HTTPS")

Rel(frontDoorDev, appPR123, "Uses", "HTTPS")
Rel(appPR123, dbPR123, "Uses", "PLSQL/TLS")
Rel(appPR123, cachePR123, "Uses", "RESP/TLS")
Rel(emailTriggerPR123, appPR123, "Trigger", "HTTPS")
' Rel(appPR123, logitIo, "Send log events", "TCPSink/TLS")
' Rel(appPR123, googleAnalytics, "Send analytics events", "HTTPS")
' Rel(appPR123, postcodesIo, "Query postcode data", "HTTPS")
' Rel(appPR123, bigQuery, "Send analytics events", "HTTPS")
' Rel(appPR123, notify, "Trigger notifications", "HTTPS")

Rel(frontDoorDev, appPR456, "Uses", "HTTPS")
Rel(appPR456, dbPR456, "Uses", "PLSQL/TLS")
Rel(appPR456, cachePR456, "Uses", "RESP/TLS")
Rel(emailTriggerPR456, appPR456, "Trigger", "HTTPS")
' Rel(appPR456, logitIo, "Send log events", "TCPSink/TLS")
' Rel(appPR456, googleAnalytics, "Send analytics events", "HTTPS")
' Rel(appPR456, postcodesIo, "Query postcode data", "HTTPS")
' Rel(appPR456, bigQuery, "Send analytics events", "HTTPS")
' Rel(appPR456, notify, "Trigger notifications", "HTTPS")

@enduml