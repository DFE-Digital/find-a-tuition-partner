// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(NtpDbContext))]
    partial class NtpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Line2")
                        .HasColumnType("text");

                    b.Property<string>("Line3")
                        .HasColumnType("text");

                    b.Property<string>("Line4")
                        .HasColumnType("text");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Postcode");

                    b.HasIndex("Latitude", "Longitude");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("Domain.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Primary - Literacy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Primary - Numeracy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Primary - Science"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Secondary - English"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Secondary - Humanities"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Secondary - Maths"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Secondary - Modern Foreign Languages"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Secondary - Science"
                        });
                });

            modelBuilder.Entity("Domain.TuitionPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("TuitionPartners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action Tutoring",
                            Website = "https://actiontutoring.org.uk/"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Affinity Workforce Solutions",
                            Website = "https://tutoring.affinityworkforce.com/"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Appla Tuition",
                            Website = "https://www.appla.co.uk/home/"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BYT Centres",
                            Website = "https://brightyoungthings.co.uk/"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cambridge Tuition Limited",
                            Website = "https://www.tutordoctor.co.uk/cambridge/"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Career Group Courses",
                            Website = "https://www.careertree.com/"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Coachbright",
                            Website = "https://www.coachbright.org/nationaltutoringprogramme"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Conexus Tuition",
                            Website = "https://conexustuition.co.uk/"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Connex Education Partnership Limited",
                            Website = "https://connex-education.com/"
                        },
                        new
                        {
                            Id = 10,
                            Name = "EM Skills Enterprise CIC (EM Tuition)",
                            Website = "https://emtuition.org.uk/"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Engage Partners",
                            Website = "https://engage-education.com/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Equal Education",
                            Website = "https://www.equal.education/national-tutoring-programme"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Equal Education Partners (E-Qual)",
                            Website = "https://equaleducationpartners.com/tutoring/#:~:text=The%20NTP%20aims%20to%20help,we%20can%20support%20your%20school."
                        },
                        new
                        {
                            Id = 14,
                            Name = "FFT",
                            Website = "https://fft.org.uk/tutoring/"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Fledge Tuition Ltd",
                            Website = "https://www.fledgetuition.com/#/"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Fleet Education Services Limited",
                            Website = "https://www.fleet-tutors.co.uk/"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Lancashire County Council",
                            Website = "https://www.lancsngfl.ac.uk/projects/ema/index.php?category_id=289&s=!B121cf29d70ec8a3d54a33343010cc2"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Learning Academies",
                            Website = "https://learningacademies.co.uk/national-tuition-partners/"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Mannings Tutors",
                            Website = "https://manningstutors.co.uk/ntp/#:~:text=We%20are%20very%20excited%20to,doing%20during%20these%20challenging%20times."
                        },
                        new
                        {
                            Id = 20,
                            Name = "My Tutor",
                            Website = "https://www.mytutor.co.uk/schools/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Pearson Education Ltd",
                            Website = "https://www.pearson.com/uk/educators/schools/pearson-tutoring-programme.html"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Pet-Xi Training",
                            Website = "https://www.pet-xi.co.uk/services/school-programmes/national-tuition-partners-programme/"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Protocol Education Ltd",
                            Website = "https://www.protocol-education.com/ntp?source=google.co.uk"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Quest for Learning",
                            Website = "https://questforlearning.org.uk/ntp-tutoring/"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Randstad HR Solutions",
                            Website = "https://www.randstad.co.uk/job-seeker/areas-of-expertise/education/ntp-tutor-training/"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Reed Tutors",
                            Website = "https://offers.reed.com/national-tutoring-programme"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Schools Partnership Tutors",
                            Website = "https://www.sptutors.co.uk/sp-tutors-national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Step Teachers Limited",
                            Website = "https://www.stepteachers.co.uk/job/ntp-tutor"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Talent-Ed Education",
                            Website = "https://www.talent-ed.uk/"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Targeted provision Limited",
                            Website = "https://targetedprovision.com/national-tutoring-programme#:~:text=What%20modes%20of%20tutoring%20do,available%20to%20continue%20throughout%20holidays."
                        },
                        new
                        {
                            Id = 31,
                            Name = "Teaching Personnel",
                            Website = "https://www.teachingpersonnel.com/ntp"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Tempest Resourcing",
                            Website = "https://tempestresourcing.co.uk/the-national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 33,
                            Name = "The Brilliant Club",
                            Website = "https://thebrilliantclub.org/news/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 34,
                            Name = "The Tutor Trust",
                            Website = "https://www.thetutortrust.org/national-tutoring-programme"
                        },
                        new
                        {
                            Id = 35,
                            Name = "TLC Live",
                            Website = "https://www.tlclive.com/approved-ntp-partner"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Tute Education",
                            Website = "https://www.tute.com/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Tutor Doctor Beeston Park",
                            Website = "https://www.tutordoctor.co.uk/beeston-park/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Tutors Green",
                            Website = "https://tutorsgreen.com/"
                        },
                        new
                        {
                            Id = 39,
                            Name = "White Rose Maths",
                            Website = "https://whiterosemaths.com/"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Zen Educate",
                            Website = "https://www.zeneducate.com/national-tutoring-programme"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Nebula Education Ltd (Trading as Seven Springs Education)",
                            Website = "https://seven-springs.co.uk/national-tutoring-programme.php"
                        },
                        new
                        {
                            Id = 42,
                            Name = "The St Albans Tuition Centre",
                            Website = "https://stalbanstuitioncentre.co.uk/new-page-3"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Nudge Education Limited",
                            Website = "https://nudgeeducation.co.uk/"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Learning Hive",
                            Website = "https://www.learninghive.co.uk/blog/learning-hive-approved-tuition-provider-national-tutoring-programme"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Bright Heart Education Ltd",
                            Website = "https://www.brightheart.co.uk/ntp/"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Avon Education Services Ltd (Tutor Doctor Bristol)",
                            Website = "https://www.tutordoctor.co.uk/bristol/"
                        },
                        new
                        {
                            Id = 47,
                            Name = "K&G Recruitment Consultancy Ltd t/a REESON Education",
                            Website = "https://www.reesoneducation.com/national-tutoring-programme"
                        },
                        new
                        {
                            Id = 48,
                            Name = "3D Recruit Ltd",
                            Website = "https://www.3drecruiteducation.com/#!amy-gudgeon/zoom/exss3/dataItem-io5s4mw6"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Toranj Tuition",
                            Website = "https://toranjtuition.org/2022/04/07/national-tutoring-partnership/#:~:text=TORANJ%20TUITION%2C%20a%20community%20and,of%20learning%20during%20the%20pandemic."
                        },
                        new
                        {
                            Id = 50,
                            Name = "ADM Computer Services Ltd (The Online Teacher)",
                            Website = ""
                        },
                        new
                        {
                            Id = 51,
                            Name = "Guardian Selection Ltd",
                            Website = ""
                        },
                        new
                        {
                            Id = 52,
                            Name = "Simply Learning Tuition Agency Ltd",
                            Website = "https://www.simplylearningtuition.co.uk/"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Prospero Group Ltd",
                            Website = "https://prosperoteaching.com/prospero-tutoring-for-tutors/#:~:text=Prospero%20are%20an%20approved%20tuition,those%20receiving%20Pupil%20Premium%20funding."
                        },
                        new
                        {
                            Id = 54,
                            Name = "Third Space Learning/Virtual Class Ltd",
                            Website = "https://thirdspacelearning.com/national-tutoring-programme/"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Tutor In A Box",
                            Website = "https://www.tutorinabox.co.uk/ntp/"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Assess Education Ltd",
                            Website = "https://assesseducation.co.uk/national-tutoring-programme/"
                        });
                });

            modelBuilder.Entity("Domain.TuitionPartnerLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("CoverageRadius")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TuitionPartnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("TuitionPartnerId");

                    b.ToTable("TuitionPartnerLocations", (string)null);
                });

            modelBuilder.Entity("Domain.TutorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TutorTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Qualified Teachers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Professional Tutors"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SEN Specialists"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Higher Level Teaching Assistants"
                        },
                        new
                        {
                            Id = 5,
                            Name = "University Students"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Volunteer tutors"
                        },
                        new
                        {
                            Id = 7,
                            Name = "No preference"
                        });
                });

            modelBuilder.Entity("Domain.UserSearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SearchJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserSessionId");

                    b.ToTable("UserSearches", (string)null);
                });

            modelBuilder.Entity("Domain.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UserSessions", (string)null);
                });

            modelBuilder.Entity("SubjectTuitionPartnerLocation", b =>
                {
                    b.Property<int>("SubjectsId")
                        .HasColumnType("integer");

                    b.Property<int>("TuitionPartnerLocationsId")
                        .HasColumnType("integer");

                    b.HasKey("SubjectsId", "TuitionPartnerLocationsId");

                    b.HasIndex("TuitionPartnerLocationsId");

                    b.ToTable("SubjectTuitionPartnerLocation", (string)null);
                });

            modelBuilder.Entity("TuitionPartnerLocationTutorType", b =>
                {
                    b.Property<int>("TuitionPartnerLocationsId")
                        .HasColumnType("integer");

                    b.Property<int>("TutorTypesId")
                        .HasColumnType("integer");

                    b.HasKey("TuitionPartnerLocationsId", "TutorTypesId");

                    b.HasIndex("TutorTypesId");

                    b.ToTable("TuitionPartnerLocationTutorType", (string)null);
                });

            modelBuilder.Entity("Domain.TuitionPartnerLocation", b =>
                {
                    b.HasOne("Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.TuitionPartner", "TuitionPartner")
                        .WithMany("Locations")
                        .HasForeignKey("TuitionPartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("TuitionPartner");
                });

            modelBuilder.Entity("Domain.UserSearch", b =>
                {
                    b.HasOne("Domain.UserSession", null)
                        .WithMany("Searches")
                        .HasForeignKey("UserSessionId");
                });

            modelBuilder.Entity("SubjectTuitionPartnerLocation", b =>
                {
                    b.HasOne("Domain.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.TuitionPartnerLocation", null)
                        .WithMany()
                        .HasForeignKey("TuitionPartnerLocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuitionPartnerLocationTutorType", b =>
                {
                    b.HasOne("Domain.TuitionPartnerLocation", null)
                        .WithMany()
                        .HasForeignKey("TuitionPartnerLocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.TutorType", null)
                        .WithMany()
                        .HasForeignKey("TutorTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.TuitionPartner", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Domain.UserSession", b =>
                {
                    b.Navigation("Searches");
                });
#pragma warning restore 612, 618
        }
    }
}
